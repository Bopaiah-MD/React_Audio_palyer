{"ast":null,"code":"var _jsxFileName = \"/Users/bomd/Documents/Learnings /react-spotify/client/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useAuth from './useAuth';\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\"; //import axios from \"axios\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"960f87b99f6f4a3eb3d37403ed0e6321\"\n});\n\nfunction Dashboard({\n  code\n}) {\n  _s();\n\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [lyrics, setLyrics] = useState(\"\");\n  console.log(\"searchResults\", searchResults);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken); // udpate accesstoken here\n  }, [accessToken]); //search realted effect \n\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return; // spotifyApi.searchTracks(search).then(res => {\n    //     console.log(\"tracks\", res.body.tracks.items);// gets all the tracks onc we type..\n    // })\n\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n    return () => cancel = true; // cancel the request api if new api request fired.\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search Songs/Artists\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: searchResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"DbegKyPwkT6bjpg+WxoXZze13iU=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/bomd/Documents/Learnings /react-spotify/client/src/Dashboard.js"],"names":["React","useState","useEffect","useAuth","Container","Form","SpotifyWebApi","spotifyApi","clientId","Dashboard","code","accessToken","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","lyrics","setLyrics","console","log","setAccessToken","cancel","searchTracks","then","res","body","tracks","items","map","track","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","e","target","value","overflowY"],"mappings":"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","sourcesContent":["import React ,{useState, useEffect} from 'react'\nimport useAuth from './useAuth'\nimport { Container, Form } from \"react-bootstrap\"\nimport SpotifyWebApi from \"spotify-web-api-node\"\n//import axios from \"axios\"\n\nconst spotifyApi = new SpotifyWebApi({\n    clientId: \"960f87b99f6f4a3eb3d37403ed0e6321\",\n  })\n\nfunction Dashboard({code}) {\n\n    const accessToken = useAuth(code)\n  const [search, setSearch] = useState(\"\")\n  const [searchResults, setSearchResults] = useState([])\n  const [playingTrack, setPlayingTrack] = useState()\n  const [lyrics, setLyrics] = useState(\"\")\n  \n\n  console.log(\"searchResults\",searchResults);\n\n  useEffect(() => {\n      if(!accessToken) return;\n      \n    spotifyApi.setAccessToken(accessToken);// udpate accesstoken here\n  }, [accessToken])\n\n  //search realted effect \n  useEffect(() => {\n\n    if(!search) return setSearchResults([])\n    if(!accessToken) return;\n\n    // spotifyApi.searchTracks(search).then(res => {\n    //     console.log(\"tracks\", res.body.tracks.items);// gets all the tracks onc we type..\n    // })\n\n    let cancel = false\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return\n      setSearchResults(\n        res.body.tracks.items.map(track => {\n          const smallestAlbumImage = track.album.images.reduce(\n            (smallest, image) => {\n              if (image.height < smallest.height) return image\n              return smallest\n            },\n            track.album.images[0]\n          )\n\n          return {\n            artist: track.artists[0].name,\n            title: track.name,\n            uri: track.uri,\n            albumUrl: smallestAlbumImage.url,\n          }\n        })\n      )\n    })\n\n    return () => (cancel = true) // cancel the request api if new api request fired.\n\n      \n\n  }, [search, accessToken])\n\n\n    return (\n        <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\" }}>\n      <Form.Control\n        type=\"search\"\n        placeholder=\"Search Songs/Artists\"\n        value={search}\n        onChange={e => setSearch(e.target.value)}\n      />\n      <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\n          {searchResults}\n      </div>\n      <div>bottom</div>\n      </Container>\n\n    )\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}